"""
At the command line, only need to run once to install the package via pip:

$ pip install google-generativeai
"""
import PyPDF2
from pathlib import Path
import hashlib
import google.generativeai as genai

genai.configure(api_key="[your key]")

# Set up the model
generation_config = {
  "temperature": 1,
  "top_p": 0.95,
  "top_k": 0,
  "max_output_tokens": 8192,
}

safety_settings = [
  {
    "category": "HARM_CATEGORY_HARASSMENT",
    "threshold": "BLOCK_MEDIUM_AND_ABOVE"
  },
  {
    "category": "HARM_CATEGORY_HATE_SPEECH",
    "threshold": "BLOCK_MEDIUM_AND_ABOVE"
  },
  {
    "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
    "threshold": "BLOCK_MEDIUM_AND_ABOVE"
  },
  {
    "category": "HARM_CATEGORY_DANGEROUS_CONTENT",
    "threshold": "BLOCK_MEDIUM_AND_ABOVE"
  },
]

system_instruction = "[add prompt]"

model = genai.GenerativeModel(model_name="gemini-1.5-pro-latest",
                              generation_config=generation_config,
                              system_instruction=system_instruction,
                              safety_settings=safety_settings)

uploaded_files = []
def upload_if_needed(pathname: str) -> list[str]:
  path = Path(pathname)
  hash_id = hashlib.sha256(path.read_bytes()).hexdigest()
  try:
    existing_file = genai.get_file(name=hash_id)
    return [existing_file.uri]
  except:
    pass
  uploaded_files.append(genai.upload_file(path=path, display_name=hash_id))
  return [uploaded_files[-1].uri]
'''
def extract_pdf_pages(pathname: str) -> list[str]:
    parts = [f"--- START OF PDF {pathname} ---"]
    with open(pathname, "rb") as file:
        reader = PyPDF2.PdfReader(file)
        for index in range(len(reader.pages)):
            page = reader.pages[index]
            parts.append(f"--- PAGE {index} ---")
            parts.append(page.extract_text())
    return parts

'''


def extract_pdf_pages(pathname: str) -> list[str]:
    parts = [f"--- START OF PDF {pathname} ---"]
    
    with open(pathname, "rb") as file:
        reader = PyPDF2.PdfReader(file)
        for index in range(1,22):
            page = reader.pages[index]
            parts.append(f"--- PAGE {index} ---")
            parts.append(page.extract_text())
    return parts


convo = model.start_chat(history=[
  {
    "role": "user",
    "parts": extract_pdf_pages("[file name]")
  },
])

MyUserInput = input("input:")
convo.send_message(MyUserInput)
print(convo.last.text)

while MyUserInput != "BREAK!!!":
  MyUserInput = input("input:")
  convo.send_message(MyUserInput)
  print(convo.last.text)
  with open('[open file to write]', 'w') as file:
    file.write(convo.last.text)

for uploaded_file in uploaded_files:
  genai.delete_file(name=uploaded_file.name)


'''
If error 504 - try exprot proxie to somewhere else 
'''
